name: Build-Scan-Push Docker Images

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - main
  pull_request:

env:
  DockerRepo: 'jsantisteban'
  ImageName: 'flask-web'
  ImageTag: '0.0.3'

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build an image from Dockerfile
        run: docker build -t ${{ env.DockerRepo }}/${{ env.ImageName }}:${{ env.ImageTag }} flask-web

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: image
          image-ref: '${{ env.DockerRepo }}/${{ env.ImageName }}:${{ env.ImageTag }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

    #  - name: Run Trivy vulnerability scanner
    #    uses: aquasecurity/trivy-action@0.20.0
    #    with:
    #      image-ref: '${{ env.DockerRepo }}/${{ env.ImageName }}:${{ env.ImageTag }}'
    #      format: 'sarif'
    #      output: 'trivy-results.sarif'
    #
    #  - name: Upload Trivy scan results to GitHub Security tab
    #    uses: github/codeql-action/upload-sarif@v3
    #    if: always()
    #    with:
    #      sarif_file: 'trivy-results.sarif'
    #
    #  - name: Build and push
    #    uses: docker/build-push-action@v6
    #    with:
    #      context: flask-web
    #      push: true
    #      tags: ${{ env.DockerRepo }}/${{ env.ImageName }}:${{ env.ImageTag }}